#
# DbCodegen - Cambalache DB Code Generator
#
# Copyright (C) 2021  Juan Pablo Ugarte - All Rights Reserved
#
# Unauthorized copying of this file, via any medium is strictly prohibited.
#

import os
import sys
import sqlite3


class CambalacheDb:
    def __init__(self):
        # Create DB file
        self.conn = sqlite3.connect(":memory:")

        dirname = os.path.dirname(__file__) or '.'

        # Create DB tables
        with open(os.path.join(dirname, '../cambalache/cmb_base.sql'), 'r') as sql:
            self.conn.executescript(sql.read())

        with open(os.path.join(dirname, '../cambalache/cmb_project.sql'), 'r') as sql:
            self.conn.executescript(sql.read())

        self.conn.commit()

    def load(self, filename):
        with open(filename, 'r') as sql:
            self.conn.executescript(sql.read())

    def _dump_table(self, fd, table, klass):
        c = self.conn.cursor()

        fd.write(f"\n\nclass {klass}(GObject.GObject):\n")

        for row in c.execute(f'PRAGMA table_info({table});'):
            default = None
            col = row[1]
            col_type =  row[2]
            pk = row[5]

            if col_type == 'INTEGER':
                col_type = 'int'
            elif col_type == 'TEXT':
                col_type = 'str'
            elif col_type == 'BOOLEAN':
                col_type = 'bool'
                default = 'False'
            else:
                print('Error unknown type', col_type)

            fd.write(f"    {col} = GObject.Property(type={col_type}")

            if pk:
                fd.write(f", flags = GObject.ParamFlags.READWRITE | GObject.ParamFlags.CONSTRUCT_ONLY")

            if default is not None:
                fd.write(f", default = {default}")

            fd.write(")\n")

        fd.write("\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n")

        c.close()

    def dump(self, filename):
        with open(filename, 'w') as fd:
            fd.write("""# THIS FILE IS AUTOGENERATED, DO NOT EDIT!!!
#
# Cambalache Base Object wrappers
#
# Copyright (C) 2021  Juan Pablo Ugarte - All Rights Reserved
#
# Unauthorized copying of this file, via any medium is strictly prohibited.
#

import gi
from gi.repository import GObject
""")

            # Base Objects
            self._dump_table(fd, 'property', 'CmbPropertyInfo')
            self._dump_table(fd, 'signal', 'CmbSignalInfo')
            self._dump_table(fd, 'type', 'CmbBaseTypeInfo')

            # Project Objects
            self._dump_table(fd, 'ui', 'CmbBaseUI')
            self._dump_table(fd, 'object_property', 'CmbProperty')
            self._dump_table(fd, 'object_layout_property', 'CmbLayoutProperty')
            self._dump_table(fd, 'object_signal', 'CmbSignal')
            self._dump_table(fd, 'object', 'CmbBaseObject')
            fd.close();


if __name__ == "__main__":
    if len(sys.argv) < 3:
        print(f"Ussage: {sys.argv[0]} library.sql output.py")
        exit()

    db = CambalacheDb()
    db.load(sys.argv[1])
    db.dump(sys.argv[2])
